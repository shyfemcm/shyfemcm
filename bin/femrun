#!/bin/sh 
#
#------------------------------------------------------------------------
#
#    Copyright (C) 1985-2020  Georg Umgiesser
#
#    This file is part of SHYFEM.
#
#------------------------------------------------------------------------
#
# femrun : runs FEM model
#
# basic directories setting

#---------------------------------------------------------------
FEMDIR=${SHYFEMDIR:=$HOME/shyfem}
BINDIR=$FEMDIR/bin
#---------------------------------------------------------------
fembat="$BINDIR/fembat"
fembatch="$BINDIR/fembatch"

tmpdir="$HOME/tmp/hp"
overall_dir="$HOME/adm"

overall_log="$overall_dir/overall.log"
batch_log="$overall_dir/batch.log"
#---------------------------------------------------------------
at=at
notify=dnotify
#---------------------------------------------------------------

Usage()
{
  echo "Usage: femrun [-h|-help] [options] STR-file"
}

FullUsage()
{
  Usage
  echo ""
  echo "Available options:"
  echo "  -h|-help         this help"
  echo "  -batch           run in batch mode"
  echo "  -exe executable  use executable to run model (default shyfem)"
  echo "  -num p           run on processor p with numactl"
  echo "  -mpi n           run MPI process with n sub-domains"
  echo "  -time time-date  run model at given time-date"
  echo ""
  echo "   p        :  0 or 0,2 or 0-4 or 1,2,4-6"
  echo "   time     :  HH:MM, midnight, noon, 1am tomorrow"
  echo "   date     :  Dec 12, MMDDYY, MM/DD/YY, DD.MM.YY"
  echo "   relative :  now + # [minutes, hours, days, or weeks]"
  echo "   (date must follow time, please enclose in apostrophes)"
  echo ""
}

ErrorOption()
{
  echo "No such option : $1"
}

RunNotify()
{
  local status
  local infodir=$1

  $notify --version > /dev/null 2>&1
  status=$?

  if [ $status -ne 0 ]; then
    echo "Cannot run command $notify. Please install."
    exit 1
  fi

  ps x | grep dnotify | grep hpinfo > /dev/null
  status=$?

  #echo "status of RunNotify is: $status"
  if [ $status -eq 0 ]; then
    echo "$notify is already running. Not executing"
  else
    echo "$notify is not running. Starting"
    dnotify -b $infodir -e $fembatch
  fi
}

############################################################## read arguments ?

mpi=0
batch="NO"
hpfile=$BINDIR/shyfem
attime="now+0minutes"
attime="now"

while [ -n "$1" ]
do
   case $1 in
        -batch)         batch="YES";;
        -exe)           hpfile=$2; shift;;
        -time)          attime=$2; shift;;
        -num)           num=$2; shift;;			#processore number
        -mpi)           mpi=$2; shift;;			#mpi processes
        -h|-help)       FullUsage; exit 0;;
        -*)             ErrorOption $1; exit 1;;
        *)              break;;
   esac
   shift
done

if [ $# -le 0 ]; then
  Usage
  exit 0
fi

strfile=$1

################################################################# set variables

strname=`basename $strfile .str`
strdir=`dirname $strfile`
if [ "$strdir" = "." ]; then
  strfile=$strname.str
else
  strfile=$strdir/$strname.str
fi

hostname=`hostname | sed -e 's/\..*//'`
actdate=`date "+%d.%m.%y %H:%M:%S"`

##################################################### control if files do exist

if [ ! -x $hpfile ]; then
	echo "Program not executable : $hpfile"
	exit 1
elif [ ! -f $strfile ]; then
	echo "No such file : $strfile"
	exit 1
fi

############################## find name of simulation and set name of log-file

simulation=`$BINDIR/simnam $strfile`

if [ "$simulation" = "" ]; then
	echo "Cannot get simulation name from file $strfile"
	exit 1
fi

logfile=$simulation.log

######################################################## echo names to terminal

prefix=""
if [ "$num" != "" ]; then
  prefix="numactl --cpunodebind=$num --membind=$num"
fi

######################################################## echo names to terminal

echo " "
echo "FEM routine          : " $hpfile
echo "input parameter file : " $strfile
echo "name of simulation   : " $simulation
echo "name of log file     : " $logfile
echo "time                 : " $attime
echo "num                  : " $prefix
echo "mpi                  : " $mpi
echo " "

##################################################### write to overall log file

mkdir -p $overall_dir
mkdir -p $tmpdir/hpat
mkdir -p $tmpdir/hpbatch
mkdir -p $tmpdir/hpinfo

echo $actdate $simulation $simname $hpfile $hostname $attime >> $overall_log

############################################################### remove log file

if [ -f $logfile ]; then
  rm $logfile
fi

##################################################################### run model

  actdir=`pwd`
  aux=`date +%Y_%m_%d.%H_%M_%S`

  if [ $batch = "NO" ]; then
    tmpfil=$tmpdir/hpat/hpat.$aux.$$
    echo "cd $actdir" > $tmpfil
    if [ $mpi -ne 0 ]; then
      #cc="/usr/bin/mpirun -np $mpi $hpfile -mpi"
      cc="mpirun -np $mpi $hpfile -mpi"
      command="$prefix nohup $fembat $tmpfil $cc $strfile"
    else
      command="$prefix nohup $fembat $tmpfil $hpfile $strfile"
    fi
    echo "$command > $logfile 2>&1 &" >> $tmpfil

    chmod +x $tmpfil
      status=$?
      echo "executing $tmpfil   status = $status"
    if [ "$attime" = "now" ]; then
      $tmpfil
    else 
      $at -f $tmpfil $attime > /dev/null 2>&1
    fi

    status=$?
  else
    RunNotify $tmpdir/hpinfo

    tmpfil=$tmpdir/hpbatch/hpbatch.$aux.$$
    echo "cd $actdir" > $tmpfil
    command="$prefix nohup $fembat $tmpfil $hpfile $strfile"
    echo "$command > $logfile 2>&1 &" >> $tmpfil
    #echo "nohup $fembat $tmpfil $hpfile $strfile > $logfile 2>&1 &" >> $tmpfil

    $fembatch

    status=$?
  fi

  if [ $status -ne 0 ]; then	#error in previous at command -> repeat for xfem
    $at -f $tmpfil $attime 
  fi

########################################################### now we are finished

